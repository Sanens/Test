#include<iostream>
using namespace std;
#define MAXSIZE 100
typedef struct{
	int *elem;
	int length;
}List;

void InitList(List&L)//创建顺序表 
{
	L.elem=new int[MAXSIZE];
	L.length=0;

}

void ListInput(List&L,int n)//顺序表输入 
{
	
	for(int i=0;i<n;i++)
	{
	cin>>L.elem[i];
	L.length++;
	}
	
}

int Combine(List LA,List LB,List &LC)//获得交集 
{
	int *pa,*pb,*pc;
	int i,j;
    int k=0;
	pa=LA.elem;
	pb=LB.elem;
	int length=(LA.length<LB.length)?LA.length:LB.length;
	pc=new int[length];
	int flag=0;
	for(i=0;i<LA.length;i++)
	{
		for(j=0;j<LB.length;j++)
		if(LA.elem[i]==LB.elem[j])
		{
			
			LC.elem[k]=LA.elem[i];
			k++;
			LC.length++;
			flag=1;
			
		}
	}
	return flag;
}

void ListOutput(List L)//顺序表输出 
{
	for(int i=0;i<(L.length-1);i++)
	cout<<L.elem[i]<<" ";
	cout<<L.elem[L.length-1];//最后一个无空格 
}

int main()
{
	int m,n;
	List LA,LB,LC;
	InitList(LA);
	InitList(LB);
	InitList(LC);
	cin>>m>>n; 
	ListInput(LA,m);
	ListInput(LB,n);
	if(Combine( LA,LB,LC))
	ListOutput(LC);
	else cout<<"没有交集！";
	return 0;	
}
